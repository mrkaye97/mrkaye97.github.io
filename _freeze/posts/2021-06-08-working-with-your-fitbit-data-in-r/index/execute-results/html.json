{
  "hash": "d0ea2c52f3cea3ac184c1fd2e0362cf8",
  "result": {
    "markdown": "---\ntitle: Working With Your Fitbit Data in R\nauthor: Matt Kaye\ndate: '2021-06-08'\ncategories: [R, data science]\nlastmod: '2021-06-08T21:26:23-04:00'\ntoc: true\nfreeze: auto\n---\n\n\n\n\n### Note: This post was updated as of 3/25/2023 for `fitbitr v0.3.0`\n\n## Introduction\n\n`fitbitr 0.1.0` is now available on CRAN! You can install it with\n\n``` r\ninstall.packages(\"fitbitr\")\n```\n\nor you can get the latest dev version with\n\n``` r\n## install.packages(\"devtools\")\ndevtools::install_github(\"mrkaye97/fitbitr\")\n```\n\n`fitbitr` makes it easy to pull your Fitbit data into R and use it for whatever interests you: personal projects, visualization, medical purposes, etc.\n\nThis post shows how you might use `fitbitr` to pull and visualize some of your data.\n\n## Sleep\n\nFirst, you should either generate a new token with `generate_token()` or load a cached token with `load_cached_token()`.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(fitbitr)\nlibrary(lubridate)\nlibrary(tidyverse)\n\n## Dates to use throughout post\nstart <- as_date(\"2020-01-01\")\nend <- as_date(\"2021-10-18\")\n\ngenerate_fitbitr_token()\n```\n:::\n\n\nAnd then you can start pulling your data!\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/unnamed-chunk-4_2f14a0443cc6b122ece6398ada43397c'}\n\n```{.r .cell-code}\nsleep <- get_sleep_summary(\n  start_date = end - months(3),\n  end_date = end\n)\n\nhead(sleep)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> log_id </th>\n   <th style=\"text-align:left;\"> date </th>\n   <th style=\"text-align:left;\"> start_time </th>\n   <th style=\"text-align:left;\"> end_time </th>\n   <th style=\"text-align:right;\"> duration </th>\n   <th style=\"text-align:right;\"> efficiency </th>\n   <th style=\"text-align:right;\"> minutes_to_fall_asleep </th>\n   <th style=\"text-align:right;\"> minutes_asleep </th>\n   <th style=\"text-align:right;\"> minutes_awake </th>\n   <th style=\"text-align:right;\"> minutes_after_wakeup </th>\n   <th style=\"text-align:right;\"> time_in_bed </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 34207402675 </td>\n   <td style=\"text-align:left;\"> 2021-10-18 </td>\n   <td style=\"text-align:left;\"> 2021-10-17 23:01:00 </td>\n   <td style=\"text-align:left;\"> 2021-10-18 06:30:00 </td>\n   <td style=\"text-align:right;\"> 26940000 </td>\n   <td style=\"text-align:right;\"> 91 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 391 </td>\n   <td style=\"text-align:right;\"> 58 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 449 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 34193579435 </td>\n   <td style=\"text-align:left;\"> 2021-10-17 </td>\n   <td style=\"text-align:left;\"> 2021-10-16 23:03:30 </td>\n   <td style=\"text-align:left;\"> 2021-10-17 08:11:00 </td>\n   <td style=\"text-align:right;\"> 32820000 </td>\n   <td style=\"text-align:right;\"> 95 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 472 </td>\n   <td style=\"text-align:right;\"> 75 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 547 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 34183584553 </td>\n   <td style=\"text-align:left;\"> 2021-10-16 </td>\n   <td style=\"text-align:left;\"> 2021-10-15 22:46:30 </td>\n   <td style=\"text-align:left;\"> 2021-10-16 06:57:30 </td>\n   <td style=\"text-align:right;\"> 29460000 </td>\n   <td style=\"text-align:right;\"> 94 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 424 </td>\n   <td style=\"text-align:right;\"> 67 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 491 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 34174304493 </td>\n   <td style=\"text-align:left;\"> 2021-10-15 </td>\n   <td style=\"text-align:left;\"> 2021-10-14 23:50:00 </td>\n   <td style=\"text-align:left;\"> 2021-10-15 08:20:30 </td>\n   <td style=\"text-align:right;\"> 30600000 </td>\n   <td style=\"text-align:right;\"> 94 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 438 </td>\n   <td style=\"text-align:right;\"> 72 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 510 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 34159751655 </td>\n   <td style=\"text-align:left;\"> 2021-10-14 </td>\n   <td style=\"text-align:left;\"> 2021-10-13 23:34:00 </td>\n   <td style=\"text-align:left;\"> 2021-10-14 09:18:00 </td>\n   <td style=\"text-align:right;\"> 35040000 </td>\n   <td style=\"text-align:right;\"> 98 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 524 </td>\n   <td style=\"text-align:right;\"> 60 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 584 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 34146865838 </td>\n   <td style=\"text-align:left;\"> 2021-10-13 </td>\n   <td style=\"text-align:left;\"> 2021-10-12 23:50:00 </td>\n   <td style=\"text-align:left;\"> 2021-10-13 08:32:30 </td>\n   <td style=\"text-align:right;\"> 31320000 </td>\n   <td style=\"text-align:right;\"> 94 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 461 </td>\n   <td style=\"text-align:right;\"> 61 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 522 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nOnce you've loaded some data, you can visualize it!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(zoo)\nlibrary(scales)\nlibrary(ggthemes)\n\nsleep <- sleep %>%\n  mutate(\n   date = as_date(date),\n   start_time = as_datetime(start_time),\n   end_time = as_datetime(end_time),\n   sh = ifelse(hour(start_time) < 8, hour(start_time) + 24, hour(start_time)), #create numeric times\n   sm = minute(start_time),\n   st = sh + sm/60,\n   eh = hour(end_time),\n   em = minute(end_time),\n   et = eh + em/60,\n   mst = rollmean(st, 7, fill = NA), #create moving averages\n   met = rollmean(et, 7, fill = NA),\n   year = year(start_time)\n)\n\nsleep %>%\n    ggplot(aes(x = date)) +\n    geom_line(aes(y = et), color = 'coral', alpha = .3, na.rm = T) +\n    geom_line(aes(y = st), color = 'dodgerblue', alpha = .3, na.rm = T) +\n    geom_line(aes(y = met), color = 'coral', na.rm = T) +\n    geom_line(aes(y = mst), color = 'dodgerblue', na.rm = T) +\n    scale_y_continuous(\n      breaks = seq(0, 30, 2),\n      labels = trans_format(\n        function(x) ifelse(x > 23, x - 24, x), \n        format = scales::comma_format(suffix = \":00\", accuracy = 1)\n      )\n    ) +\n    labs(x = \"Date\", y = 'Time') +\n    theme_fivethirtyeight() +\n    scale_x_date(date_breaks = '1 month', date_labels = '%b', expand = c(0, 0)) +\n    facet_grid(. ~ year, space = 'free', scales = 'free_x', switch = 'x') +\n    theme(panel.spacing.x = unit(0,\"line\"), strip.placement = \"outside\")\n```\n\n::: {.cell-output-display}\n![](static/rmarkdown-libsunnamed-chunk-5-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nThis bit of code makes a nicely formatted plot of the times you went to sleep and woke up over the past three months. You can also use `fitbitr` to expand the time window with a little help from `purrr` (the Fitbit API rate limits you, so you can't request data for infinitely long windows in a single request).\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/unnamed-chunk-6_af35efd52163eeefe06857cbd3a33893'}\n\n```{.r .cell-code}\n## Pull three months of data\nsleep <- map_dfr(\n  3:0,\n  ~ sleep_summary(\n    end - months(.x), \n    end - months(.x) + months(1)\n  )\n)\n```\n:::\n\n\nAfter pulling the data, we can use the same code again to visualize it.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsleep <- sleep %>%\n  mutate(\n   date = as_date(date),\n   start_time = as_datetime(start_time),\n   end_time = as_datetime(end_time),\n   sh = ifelse(hour(start_time) < 8, hour(start_time) + 24, hour(start_time)), #create numeric times\n   sm = minute(start_time),\n   st = sh + sm/60,\n   eh = hour(end_time),\n   em = minute(end_time),\n   et = eh + em/60,\n   mst = rollmean(st, 7, fill = NA), #create moving averages\n   met = rollmean(et, 7, fill = NA),\n   year = year(start_time)\n) %>%\n  distinct()\n\nsleep %>%\n    ggplot(aes(x = date)) +\n    geom_line(aes(y = et), color = 'coral', alpha = .3, na.rm = T) +\n    geom_line(aes(y = st), color = 'dodgerblue', alpha = .3, na.rm = T) +\n    geom_line(aes(y = met), color = 'coral', na.rm = T) +\n    geom_line(aes(y = mst), color = 'dodgerblue', na.rm = T) +\n    scale_y_continuous(\n      breaks = seq(0, 30, 2),\n      labels = trans_format(\n        function(x) ifelse(x > 23, x - 24, x), \n        format = scales::comma_format(suffix = \":00\", accuracy = 1)\n      )\n    ) +\n    labs(x = \"Date\", y = 'Time') +\n    theme_fivethirtyeight() +\n  scale_x_date(date_breaks = '1 month', date_labels = '%b', expand = c(0, 0)) +\n  facet_grid(. ~ year, space = 'free', scales = 'free_x', switch = 'x') +\n  theme(panel.spacing.x = unit(0,\"line\"), strip.placement = \"outside\")\n```\n\n::: {.cell-output-display}\n![](static/rmarkdown-libsunnamed-chunk-7-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Heart Rate and Steps\n\nYou can also pull your heart rate data with `fitbitr`. Maybe we're curious about seeing how the number of minutes spent in the \"fat burn,\" \"cardio,\" and \"peak\" zones correlates with the number of steps taken that day. Let's find out!\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/unnamed-chunk-8_df41135438270860bd7e0fd1091a4efa'}\n\n```{.r .cell-code}\nhr <- map_dfr(\n  3:0,\n  ~ heart_rate_zones(\n    end - months(.x), \n    end - months(.x) + months(1)\n  )\n)\n\nsteps <- map_dfr(\n  3:0,\n  ~ steps(\n    end - months(.x), \n    end - months(.x) + months(1)\n  )\n)\n```\n:::\n\n\nFirst, we can examine the heart rate data:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhead(hr)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> date </th>\n   <th style=\"text-align:left;\"> zone </th>\n   <th style=\"text-align:right;\"> min_hr </th>\n   <th style=\"text-align:right;\"> max_hr </th>\n   <th style=\"text-align:right;\"> minutes_in_zone </th>\n   <th style=\"text-align:right;\"> calories_out </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-18 </td>\n   <td style=\"text-align:left;\"> Out of Range </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 113 </td>\n   <td style=\"text-align:right;\"> 1440 </td>\n   <td style=\"text-align:right;\"> 2530.16460 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-18 </td>\n   <td style=\"text-align:left;\"> Fat Burn </td>\n   <td style=\"text-align:right;\"> 113 </td>\n   <td style=\"text-align:right;\"> 141 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0.00000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-18 </td>\n   <td style=\"text-align:left;\"> Cardio </td>\n   <td style=\"text-align:right;\"> 141 </td>\n   <td style=\"text-align:right;\"> 176 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0.00000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-18 </td>\n   <td style=\"text-align:left;\"> Peak </td>\n   <td style=\"text-align:right;\"> 176 </td>\n   <td style=\"text-align:right;\"> 220 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0.00000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-19 </td>\n   <td style=\"text-align:left;\"> Out of Range </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 113 </td>\n   <td style=\"text-align:right;\"> 1408 </td>\n   <td style=\"text-align:right;\"> 2689.45124 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-19 </td>\n   <td style=\"text-align:left;\"> Fat Burn </td>\n   <td style=\"text-align:right;\"> 113 </td>\n   <td style=\"text-align:right;\"> 141 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 86.59917 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nand the steps data:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhead(steps)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> date </th>\n   <th style=\"text-align:right;\"> steps </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-18 </td>\n   <td style=\"text-align:right;\"> 5620 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-19 </td>\n   <td style=\"text-align:right;\"> 7537 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-20 </td>\n   <td style=\"text-align:right;\"> 5513 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-21 </td>\n   <td style=\"text-align:right;\"> 9014 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-22 </td>\n   <td style=\"text-align:right;\"> 10883 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2021-07-23 </td>\n   <td style=\"text-align:right;\"> 2975 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nNow, let's plot them against each other.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf <- hr %>%\n  filter(zone != \"Out of Range\") %>%\n  group_by(date) %>%\n  summarize(total_minutes = sum(minutes_in_zone), .groups = \"drop\") %>%\n  inner_join(steps, by = \"date\")\n  \ndf %>%\n  mutate(steps = as.numeric(steps)) %>%\n  filter(log(total_minutes) > 1) %>%\n  ggplot(\n    aes(\n      steps,\n      total_minutes\n    )\n  ) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = F) +\n  scale_x_log10() +\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](static/rmarkdown-libsunnamed-chunk-11-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nOr maybe it'd be interesting to predict your zone minutes from your steps:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npredictions <- df %>%\n  mutate(steps = as.numeric(steps)) %>%\n  lm(total_minutes ~ steps, data = .) %>%\n  broom::tidy() %>%\n  mutate(across(where(is.numeric), round, 5))\n\nhead(predictions)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:right;\"> estimate </th>\n   <th style=\"text-align:right;\"> std.error </th>\n   <th style=\"text-align:right;\"> statistic </th>\n   <th style=\"text-align:right;\"> p.value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:right;\"> 23.09761 </td>\n   <td style=\"text-align:right;\"> 5.77502 </td>\n   <td style=\"text-align:right;\"> 3.99957 </td>\n   <td style=\"text-align:right;\"> 0.00011 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> steps </td>\n   <td style=\"text-align:right;\"> 0.00252 </td>\n   <td style=\"text-align:right;\"> 0.00056 </td>\n   <td style=\"text-align:right;\"> 4.52922 </td>\n   <td style=\"text-align:right;\"> 0.00001 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Wrapping Up\n\nAnd that's it! Hopefully this helped show how `fitbitr` makes pulling your data easy, and gets you curious about the insights you can glean from your own data. The Fitbit API gives you access to so much interesting information about yourself, your habits, your fitness, and so much more, and `fitbitr` is just meant to be a door into that gold mine.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}